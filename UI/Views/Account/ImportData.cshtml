@model UI.Models.ImportDataViewModel
@{
    ViewData["Title"] = "Import Data";
    Layout = "~/Views/Shared/_SidenavLayout.cshtml";
}


@section Workspace {

    <form method="post" enctype="multipart/form-data" asp-controller="Account" asp-action="FileUpload">

        <div class="row">
            <div class="form-group">
                <div class="col-md-12">
                    <p class="lazy-inline-white">Upload One Or More Excel Datasheets</p>
                    <input type="file" name="files" multiple />
                </div>
            </div>

        </div>
        <div class="row">

            <div class="form-group">
                <div class="col-md-12">
                    Retrieve Data After Upload
                    <span class="col-md-6">
                        @Html.RadioButtonFor(model => model.ViewData, true) Yes
                        @Html.RadioButtonFor(model => model.ViewData, false) No

                    </span>
                    <span class="col-md-6">
                        <div class="form-group">
                            <input type="submit" value="Upload" />
                        </div>
                    </span>
                </div>

            </div>
        </div>

    </form>

}

@if (Model.UploadStats.NumberOfRecords > 0 && Model.ViewData == true){
  
    <partial name="_TableView" for="PersonList" />

}


@section Scripts  {
    <script>


        // Upload

        //var dropZone = document.getElementById('drop-zone');
        //var uploadForm = document.getElementById('js-upload-form');

        //var startUpload = function (files) {
        //    console.log(files)
        //}

        //uploadForm.addEventListener('submit', function (e) {
        //    var uploadFiles = document.getElementById('js-upload-files').files;
        //    e.preventDefault()

        //    startUpload(uploadFiles)
        //})

        //dropZone.ondrop = function (e) {
        //    e.preventDefault();
        //    this.className = 'upload-drop-zone';

        //    startUpload(e.dataTransfer.files)
        //}

        //dropZone.ondragover = function () {
        //    this.className = 'upload-drop-zone drop';
        //    return false;
        //}

        //dropZone.ondragleave = function () {
        //    this.className = 'upload-drop-zone';
        //    return false;
        //}

        // Filter

        $('.filterable .btn-filter').click(function () {
            var $panel = $(this).parents('.filterable'),
                $filters = $panel.find('.filters input'),
                $tbody = $panel.find('.table tbody');
            if ($filters.prop('disabled') == true) {
                $filters.prop('disabled', false);
                $filters.first().focus();
            } else {
                $filters.val('').prop('disabled', true);
                $tbody.find('.no-result').remove();
                $tbody.find('tr').show();
            }
        });

        $('.filterable .filters input').keyup(function (e) {
            /* Ignore tab key */
            var code = e.keyCode || e.which;
            if (code == '9') return;
            /* Useful DOM data and selectors */
            var $input = $(this),
                inputContent = $input.val().toLowerCase(),
                $panel = $input.parents('.filterable'),
                column = $panel.find('.filters th').index($input.parents('th')),
                $table = $panel.find('.table'),
                $rows = $table.find('tbody tr');
            /* Dirtiest filter function ever */
            var $filteredRows = $rows.filter(function () {
                var value = $(this).find('td').eq(column).text().toLowerCase();
                return value.indexOf(inputContent) === -1;
            });
            /* Clean previous no-result if exist */
            $table.find('tbody .no-result').remove();
            /* Show all rows, hide filtered ones */
            $rows.show();
            $filteredRows.hide();
            /* Prepend no-result row if all rows are filtered */
            if ($filteredRows.length === $rows.length) {
                $table.find('tbody').prepend($('<tr class="no-result text-center"><td colspan="' + $table.find('.filters th').length + '">No result found</td></tr>'));
            }
        });

    </script>

}