@model UI.Models.ImportDataViewModel
@{
    ViewData["Title"] = "Import Data";
    Layout = "~/Views/Shared/_SidenavLayout.cshtml";
}


@section Workspace {

    <form method="post" enctype="multipart/form-data" asp-controller="Account" asp-action="FileUpload">
        <div class="form-group">
            <div class="col-md-10">
                <p class="lazy-inline-white">Upload One Or More Excel Datasheets</p>
                <input type="file" name="files" multiple />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                <input type="submit" value="Upload" />
            </div>
        </div>
    </form>


    <div class="panel panel-default">
        <div class="panel-body">

            <!-- Standar Form -->
            <h4 class="lazy-inline-white">Select File</h4>


            <!-- Drop Zone -->
            <h4 class="lazy-inline-white">Or drag and drop files below</h4>
            <div class="upload-drop-zone" id="drop-zone">
                Just drag and drop files here
            </div>

            <!-- Progress Bar -->
            <div class="progress">
                <div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 60%;">
                    <span class="sr-only"></span>
                </div>
            </div>

        </div>
    </div>
}

@*


<div class="pos-f-t">
    <div class="collapse" id="navbarToggleExternalContent">
        <div class="bg-dark p-4">



        </div>
    </div>
    <nav class="navbar navbar-dark bg-dark">
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarToggleExternalContent" aria-controls="navbarToggleExternalContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
    </nav>
</div>
    *@

<!-- Upload Finished -->
@if (Model.UploadStats.NumberOfRecords > 0) {
    <div class="js-upload-finished">
        <h3>Processed files</h3>
        <div class="list-group">
            <a href="#" class="list-group-item list-group-item-success"><span class="badge alert-success pull-right">You have Successfully Uploaded @Model.UploadStats.NumberOfRecords Records. </span>@Model.UploadStats.FileName</a>
        </div>
    </div>
} else {

    <a href="#" class="list-group-item list-group-item-secondary"><span class="badge alert-secondary pull-right">No Files Have Been Uploaded</span></a>

}




@if (Model.UploadStats.NumberOfRecords > 0) {
    <div class="panel panel-primary filterable">
        <div class="panel-heading">
            <div class="pull-right">
                <button class="btn btn-default btn-xs btn-filter">Filter</button>
            </div>
        </div>
        <div class="">
            <table class="table table-dark table-sm table-hover table-bordered">
                <thead class="thead-light">
                    <tr class="filters">
                        <th>
                            <input type="text" class="form-control" placeholder="First Name" disabled>
                        </th>
                        <th>
                            <input type="text" class="form-control" placeholder="Last Name" disabled>
                        </th>
                        <th>
                            <input type="text" class="form-control" placeholder="Date of Birth" disabled>
                        </th>
                        <th>
                            <input type="text" class="form-control" placeholder="Gender" disabled>
                        </th>
                        <th>
                            <input type="text" class="form-control" placeholder="Marital Status" disabled>
                        </th>
                        <th>
                            <input type="text" class="form-control" placeholder="Email Address" disabled>
                        </th>
                        <th>
                            <input type="text" class="form-control" placeholder="Phone Number" disabled>
                        </th>
                        <th>
                            <input type="text" class="form-control" placeholder="Street Address Line 1" disabled>
                        </th>
                        <th>
                            <input type="text" class="form-control" placeholder="Street Address Line 2" disabled>
                        </th>
                        <th>
                            <input type="text" class="form-control" placeholder="City" disabled>
                        </th>
                        <th>
                            <input type="text" class="form-control" placeholder="State" disabled>
                        </th>
                        <th>
                            <input type="text" class="form-control" placeholder="Zip" disabled>
                        </th>

                    </tr>
                </thead>
                <tbody>

                    @foreach (var item in Model.PersonList) {
                        <tr>

                            <td>
                                @Html.DisplayFor(modelItem => item.FirstName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.LastName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DateOfBirth)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Gender)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.MaritalStatus)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.EmailAddress)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PhoneNumber)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.StreetAddressLine1)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.StreetAddressLine2)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.City)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.State)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Zip)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}



@section Scripts  {
    <script>


        // Upload

        //var dropZone = document.getElementById('drop-zone');
        //var uploadForm = document.getElementById('js-upload-form');

        //var startUpload = function (files) {
        //    console.log(files)
        //}

        //uploadForm.addEventListener('submit', function (e) {
        //    var uploadFiles = document.getElementById('js-upload-files').files;
        //    e.preventDefault()

        //    startUpload(uploadFiles)
        //})

        //dropZone.ondrop = function (e) {
        //    e.preventDefault();
        //    this.className = 'upload-drop-zone';

        //    startUpload(e.dataTransfer.files)
        //}

        //dropZone.ondragover = function () {
        //    this.className = 'upload-drop-zone drop';
        //    return false;
        //}

        //dropZone.ondragleave = function () {
        //    this.className = 'upload-drop-zone';
        //    return false;
        //}

        // Filter

        $('.filterable .btn-filter').click(function () {
            var $panel = $(this).parents('.filterable'),
                $filters = $panel.find('.filters input'),
                $tbody = $panel.find('.table tbody');
            if ($filters.prop('disabled') == true) {
                $filters.prop('disabled', false);
                $filters.first().focus();
            } else {
                $filters.val('').prop('disabled', true);
                $tbody.find('.no-result').remove();
                $tbody.find('tr').show();
            }
        });

        $('.filterable .filters input').keyup(function (e) {
            /* Ignore tab key */
            var code = e.keyCode || e.which;
            if (code == '9') return;
            /* Useful DOM data and selectors */
            var $input = $(this),
                inputContent = $input.val().toLowerCase(),
                $panel = $input.parents('.filterable'),
                column = $panel.find('.filters th').index($input.parents('th')),
                $table = $panel.find('.table'),
                $rows = $table.find('tbody tr');
            /* Dirtiest filter function ever */
            var $filteredRows = $rows.filter(function () {
                var value = $(this).find('td').eq(column).text().toLowerCase();
                return value.indexOf(inputContent) === -1;
            });
            /* Clean previous no-result if exist */
            $table.find('tbody .no-result').remove();
            /* Show all rows, hide filtered ones */
            $rows.show();
            $filteredRows.hide();
            /* Prepend no-result row if all rows are filtered */
            if ($filteredRows.length === $rows.length) {
                $table.find('tbody').prepend($('<tr class="no-result text-center"><td colspan="' + $table.find('.filters th').length + '">No result found</td></tr>'));
            }
        });

    </script>

}